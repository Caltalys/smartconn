import type { Metadata } from "next";
import { Montserrat, Lato } from "next/font/google";
import "./globals.css";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { getMessages, setRequestLocale } from "next-intl/server";
import { fetchGlobalLayoutData } from "@/lib/api";
import Footer from "@/components/sections/Footer";
import Header from "@/components/sections/Header";
import Topbar from "@/components/sections/Topbar";

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

const montserrat = Montserrat({
  subsets: ["latin", "vietnamese"],
  variable: "--font-sans",
  display: "swap",
});

const lato = Lato({
  subsets: ["latin"],
  weight: ["400", "700"],
  variable: "--font-serif",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
};


export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  // Enable static rendering
  setRequestLocale(locale);

  const messages = await getMessages();

  // Fetch all global data in a single, optimized call
  const layoutData = await fetchGlobalLayoutData(locale);

  return (
    <html lang={locale}>
      <body className={`${montserrat.variable} ${lato.variable} font-sans antialiased`}>
        <div className="relative flex flex-col min-h-screen">
          <NextIntlClientProvider messages={messages}>
            <Topbar data={layoutData.topbar} />
            <Header data={layoutData.navbar} />
            <main className="flex-grow">
              {children}
            </main>
            <Footer data={layoutData.footer} />
          </NextIntlClientProvider>
        </div>
      </body>
    </html>
  );
}
